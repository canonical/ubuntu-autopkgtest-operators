#!/bin/sh

set -eu

# $1 expected in form: arch-release-type, with type either "container" or "vm".
IFS=- read -r arch RELEASE type <<EOF
$1
EOF

export RELEASE

remote="worker-$arch"
imgremote="ubuntu-daily"
base=$RELEASE

if [ -z "${MIRROR-}" ]; then
    echo 'MIRROR environment variable is not set, the image default will be used'
fi

# Fallback to stable when opening a new release. We use --latest
# instead of --devel as that works with outdated distro-info-data.
latest=$(ubuntu-distro-info --latest)
stable=$(ubuntu-distro-info --stable)
name="autopkgtest/ubuntu/$RELEASE/$arch"
set -- lxc image info
if [ "$type" = "vm" ]; then
    set -- "$@" --vm
    name="$name/vm"
fi
if
    [ "$RELEASE" = "$latest" ] &&
    "$@" "$imgremote:$base/$arch" 2>&1 | grep -q "couldn't be found" &&
    "$@" "$imgremote:$stable/$arch" >/dev/null 2>&1
then
    echo "No $base image appears to be available, falling back to $stable"
    base=$stable
fi

# Construct the autopkgtest-build-lxd command line in $@.
set -- autopkgtest-build-lxd
if [ "$type" = "vm" ]; then
    set -- "$@" --vm
fi
set -- "$@" --remote "$remote" "ubuntu-daily:$base/$arch"

# If RUNTIME_DIRECTORY is set, which normally happens when this script
# is started from the systemd service, then limit to one image build
# per architecture (remote).
if [ -n "${RUNTIME_DIRECTORY-}" ]; then
    set -- flock --verbose "$RUNTIME_DIRECTORY/$arch.lock" "$@"
fi

exec "$@"
